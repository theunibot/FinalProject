//This is the R12 Robot Init File. This file is where commands are placed in the RoboForth
//Language and are called upon startup by the R12Operations object. 
//Each command should be seperated by a carriage return.
//All comments must be on their own line and start with "//"
//Commands containing "$" and "&" are special instructions to the processor.  $<text> indicates
//an alternative success text (instead of "OK") to look for.  &<number> indicates that more than
//one ">" symbol will be found, and the number is how many to look for.


// Patch the controller to support a deeper stack depth (about 70-100 items)
// note: commented out because ORG JUMP (which does cold start) doesn't return OK, so to use
// this would need to modify code to look for other indications of successful command entry

ORG JUMP
3FF0 1361 ! 3FF0 8C3 ! 3FF0 8CB ! 3FF0 45B !
ORG JUMP

// start up the controller
ROBOFORTH
START
DECIMAL
ABSOLUTE
CARTESIAN
2000 TON !
800 TGRIP !

// declare variable DRI (Dynamic Route Index) to index where we are inside a
// dynamic route construction
VARIABLE DRI
// declare the route name we will use for dynamic routes
ROUTE DR
100 RESERVE

// DR1 - Dynamic route, phase 1: initializes and clears the dynamic route
: DR1
DR
ERASE
0 DRI !
." Dynamic route has been reset" CR
;

// DR2 - learns a single point on the dynamic route path.  Stack should contain 6 values - XYZPYR  RYPZYX (x is top most value)
: DR2
DR
." Filling route index " DRI @ . CR
// increment to the next index in the route list
DRI @ 1 + DRI !
// set the total moves in the route table to support the new line being added
DRI @ MOVES E!
// go store the values into the route line
6 0 DO
   DRI @ LINE I 2* + E!
LOOP
// set the route rules.  
// Bytes 12/13 are: 0=joint values, 1=relative joint coordinate, 2=cartesian, 3=relative cartesian
2 DRI @ LINE 12 + E!
// must be a zero, or the CFA of a word to execute (see RoboForth manual on CFA for examples, and see
// the FIND and SET commands (such as FIND cmd EXECUTE or FIND cmd VARIABLE ! to store it and the VARIABLE EXECUTE to execute it)
0 DRI @ LINE 14 + E!
;

// DR3 - run the dynamic route, with adjust
: DR3
DR
." Dynamic route contains:" CR
L.
CONTINUOUS ADJUST RUN
;

